<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <!-- shiro-all.jar
    filterChainDefinitions：apache
    shiro通过filterChainDefinitions参数来分配链接的过滤，
    资源过滤有常用的以下几个参数：
    authc 表示需要认证的链接
    perms[/url] 表示该链接需要拥有对应的资源/权限才能访问
    roles[admin] 表示需要对应的角色才能访问
    perms[admin:url] 表示需要对应角色的资源才能访问
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/login" />
        <property name="unauthorizedUrl" value="/noPrem" />

        <property name="filterChainDefinitions">
            <value>
                /** = anon
                /csm/api/user/login = anon
                /csm/views/static/** = anon
                <!--/** = authc-->
                <!-- authc 表示需要认证才能访问的页面 -->
                <!--/test = authc -->
                /chainHome = authc, perms[/chainHome]  <!-- perms 表示需要该权限才能访问的页面 -->
            </value>
        </property>
    </bean>

    <bean id="myShiroRealm" class="com.fortis.impwx.shiro.MyShiroRealm">
        <property name="cachingEnabled" value="false"/>
        <property name="authenticationCachingEnabled" value="false"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
    </bean>

    <!-- 安全管理 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myShiroRealm"/>
        <property name="cacheManager" ref="cacheManager" />
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--配置shiro注解-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthorizedException">403</prop>
            </props>
        </property>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 设置session过期时间为1小时(单位：毫秒)，默认为30分钟 -->
        <!-- 设置为1天 -->
        <property name="globalSessionTimeout" value="86400000"/>
        <property name="sessionValidationInterval" value="86400000"/>
        <property name="deleteInvalidSessions" value="true"/>

        <!--#是否启用/禁用Session Id Cookie,默认是启用的,-->
        <!--#如果禁用后将不会设置Session Id Cookie-->
        <!--#即默认使用了Servlet容器的JSESSIONID-->
        <!--#且通过URL重写（URL中的“;JSESSIONID=id”部分）保存Session Id-->
        <property name="sessionIdCookieEnabled" value="true"/>

        <property name="sessionIdCookie">
            <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                <constructor-arg value="shiroCookie"/>
                <!--设置Cookie名字,默认为JSESSIONID -->
                <property name="name" value="impWxid" />
                <!--设置Cookie的路径,默认空,即存储在域名根下-->
                <property name="path" value="/" />
                <!--设置Cookie的过期时间,秒为单位,默认-1表示关闭浏览器时过期-->
                <property name="maxAge" value="36000"/>
                <!--使用HttpOnly cookie有助于减少某些类型的跨站点脚本攻击-->
                <property name="httpOnly" value="true"/>
            </bean>
        </property>
        <property name="sessionListeners" ref="sessionListener"/>
        <!--<property name="sessionValidationSchedulerEnabled" value="true"/>-->
        <!--避免url中出现jsessionid-->
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
    </bean>

    <bean id="sessionListener" class="com.fortis.impwx.shiro.ShiroHandleSessionListener"/>

</beans>