<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fortis.impwx.dao.BOverrunStoreMapper" >
  <resultMap id="BaseResultMap" type="com.fortis.impwx.model.BOverrunStore" >
    <id column="mac" property="mac" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="BIGINT" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    <result column="store_addr" property="storeAddr" jdbcType="VARCHAR" />
    <result column="limit_time" property="limitTime" jdbcType="VARCHAR" />
    <result column="is_scan" property="isScan" jdbcType="BIT" />
    <result column="is_vip" property="isVip" jdbcType="BIT" />
    <result column="is_exception" property="isException" jdbcType="BIT" />
    <result column="use_chain_doctor" property="useChainDoctor" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    mac, store_id, store_name, store_addr, limit_time, is_scan, is_vip, is_exception,use_chain_doctor
  </sql>

  <select id="getBOverrunStoreList" resultMap="BaseResultMap" parameterType="com.fortis.impwx.model.BOverrunStore">
    select
    <include refid="Base_Column_List" />
    from b_overrun_store b
    where 1=1
    <if test="mac != null and mac != ''">
      and mac = #{mac}
    </if>
    <if test="storeName != null and storeName != ''">
      and store_name = #{storeName}
    </if>
    limit #{start},#{length}
  </select>

  <select id="getBOverrunStoreTotal" resultType="java.lang.Long" parameterType="com.fortis.impwx.model.BOverrunStore">
    SELECT
    count(*)
    FROM b_overrun_store
    where 1=1
    <if test="mac != null and mac != ''">
      and mac = #{mac}
    </if>
    <if test="storeName != null and storeName != ''">
      and store_name = #{storeName}
    </if>
  </select>

  <select id="bOverrunStore" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from b_overrun_store
    where mac = #{mac,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByMac" parameterType="java.lang.String" >
    delete from b_overrun_store
    where mac = #{mac,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.fortis.impwx.model.BOverrunStore" >
    insert into b_overrun_store (mac, store_id, store_name,
      store_addr, limit_time, is_scan,
      is_vip, is_exception)
    values (#{mac,jdbcType=VARCHAR}, #{storeId,jdbcType=BIGINT}, #{storeName,jdbcType=VARCHAR},
      #{storeAddr,jdbcType=VARCHAR}, #{limitTime,jdbcType=VARCHAR}, #{isScan,jdbcType=BIT},
      #{isVip,jdbcType=BIT}, #{isException,jdbcType=BIT})
  </insert>

  <update id="update" parameterType="com.fortis.impwx.model.BOverrunStore" >
    update b_overrun_store
    <set >
      <if test="storeId != null and storeId != ''" >
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="storeName != null and storeName != ''" >
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeAddr != null and storeAddr != ''" >
        store_addr = #{storeAddr,jdbcType=VARCHAR},
      </if>
      <if test="limitTime != null and limitTime != ''" >
        limit_time = #{limitTime,jdbcType=VARCHAR},
      </if>
      <if test="isScan != null and isScan != ''" >
        is_scan = #{isScan,jdbcType=BIT},
      </if>
      <if test="isVip != null and isVip != ''" >
        is_vip = #{isVip,jdbcType=BIT},
      </if>
      <if test="isException != null and isException != ''" >
        is_exception = #{isException,jdbcType=BIT},
      </if>
      <if test="useChainDoctor != null and useChainDoctor != ''" >
        use_chain_doctor = #{useChainDoctor,jdbcType=BIT},
      </if>
    </set>
    where mac = #{mac,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fortis.impwx.model.BOverrunStore" >
    update b_overrun_store
    set store_id = #{storeId,jdbcType=BIGINT},
      store_name = #{storeName,jdbcType=VARCHAR},
      store_addr = #{storeAddr,jdbcType=VARCHAR},
      limit_time = #{limitTime,jdbcType=VARCHAR},
      is_scan = #{isScan,jdbcType=BIT},
      is_vip = #{isVip,jdbcType=BIT},
      is_exception = #{isException,jdbcType=BIT}
    where mac = #{mac,jdbcType=VARCHAR}
  </update>
</mapper>